#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

export DEB_BUILD_MAINT_OPTIONS = hardening=+all
DPKG_EXPORT_BUILDFLAGS = 1

export DEB_CPPFLAGS_MAINT_APPEND = -DDIG_SIGCHASE
export DEB_CFLAGS_MAINT_APPEND = -fno-strict-aliasing -fno-delete-null-pointer-checks

include /usr/share/dpkg/buildflags.mk

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

COMMA = ,
ifneq (,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
  NJOBS := -j $(subst parallel=,,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
endif

DEB_BUILD_ARCH		?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEB_HOST_ARCH		?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_MULTIARCH	?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

export arch = $(DEB_HOST_ARCH)

ifeq ($(DEB_HOST_ARCH_OS),kfreebsd)
EXTRA_FEATURES=--disable-linux-caps --disable-threads
endif

stamps/prepare:
	dh_testdir
	mkdir autoreconf-bck
	cp -pr config.h.in configure libtool.m4 ltmain.sh autoreconf-bck
	dh_autotools-dev_updateconfig
	dh_autoreconf
	@mkdir -p stamps
	touch $@

stamps/configure: stamps/prepare
	dh_testdir
	rm -rf build
	mkdir -p build
	cd build && ../configure --prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--libdir=\$${prefix}/lib/$(DEB_HOST_MULTIARCH) \
		--infodir=\$${prefix}/share/info \
		--sysconfdir=/etc/bind \
		--localstatedir=/var \
		--enable-threads \
		--enable-largefile \
		--with-libtool \
		--enable-shared \
		--enable-static \
		--with-openssl=/usr \
		--with-gssapi=/usr \
		--with-gnu-ld \
		--with-geoip=/usr \
		--with-atf=no \
		--enable-ipv6 \
		--enable-rrl \
		--enable-filter-aaaa \
		$(EXTRA_FEATURES)

	touch $@

stamps/configure-udeb: stamps/prepare
	dh_testdir
	rm -rf build-udeb
	mkdir -p build-udeb
	cd build-udeb && ../configure --prefix=/usr \
		--prefix=/usr \
		--disable-epoll \
		--disable-kqueue \
		--disable-devpoll \
		--disable-threads \
		--disable-linux-caps \
		--without-openssl \
		--without-libxml2 \
		--enable-ipv6 \
		--enable-shared \
		--enable-exportlib \
		--with-libtool \
		--with-gssapi=no \
		--with-export-libdir=\$${prefix}/lib/$(DEB_HOST_MULTIARCH) \
		--with-export-includedir=\$${prefix}/include/bind-export

	touch $@

build-arch: build
build-indep: build
build: stamps/build
stamps/build: stamps/configure stamps/configure-udeb
	dh_testdir
	LD_LIBRARY_PATH=$(CURDIR)/build/lib/isc/.libs:$(CURDIR)/build/lib/isccc/.libs:$(CURDIR)/build/isccfg/.libs:$${LD_LIBRARY_PATH} \
	  $(MAKE) -C build $(NJOBS)
	touch $@

stamps/build-udeb: stamps/configure-udeb
	dh_testdir
	$(MAKE) -C build-udeb $(NJOBS)
	touch $@

autofiles:
	libtoolize --automake --copy --force
	aclocal
	#automake
	autoheader
	autoconf
	rm -rf autom4te.cache
	cp config.guess config.sub contrib/idn/idnkit-1.0-src/

clean:
	dh_testdir
	dh_testroot
	rm -rf build build-udeb stamps debian/tmp-udeb
	rm -f debian/substvars
	rm -f doc/arm/Bv9ARM.pdf
	dh_autoreconf_clean
	dh_autotools-dev_restoreconfig
	dh_clean
	mv autoreconf-bck/* .; rmdir autoreconf-bck

newtemplate:
	debconf-updatepo

msgstats:
	@cd debian/po && for i in *.po; do x=$$(msgfmt --statistics $$i 2>&1); echo $$i $$x; done; rm -f messages.mo *.po~

msg-email:
	@podebconf-report-po

ETCBIND=debian/bind9/etc/bind
ETCAPP=debian/bind9/etc/apparmor.d
install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	: # regular install
	$(MAKE) -C build install DESTDIR=$(CURDIR)/debian/bind9
	rm -rf debian/bind9/usr/etc
	find debian/bind9 -name \*.la -execdir rm -f {} \;
	install -c -o bin -g bin -m 444 debian/db.0 ${ETCBIND}/db.0
	install -c -o bin -g bin -m 444 debian/db.0 ${ETCBIND}/db.255
	install -c -o bin -g bin -m 444 debian/db.empty ${ETCBIND}
	install -c -o bin -g bin -m 444 debian/zones.rfc1918 ${ETCBIND}
	install -c -o bin -g bin -m 444 debian/db.127 ${ETCBIND}
	install -c -o bin -g bin -m 444 debian/db.local ${ETCBIND}
	install -c -o bin -g bin -m 444 debian/db.root ${ETCBIND}
	install -c -o bin -g bin -m 440 debian/named.conf ${ETCBIND}
	install -c -o bin -g bin -m 440 debian/named.conf.local ${ETCBIND}
	install -c -o bin -g bin -m 440 debian/named.conf.default-zones ${ETCBIND}
	install -c -o bin -g bin -m 440 bind.keys ${ETCBIND}
	install -c -o bin -g bin -m 440 debian/named.conf.options debian/bind9/usr/share/bind9/
	cp doc/arm/*.html debian/bind9-doc/usr/share/doc/bind9-doc/arm
	install -m 644 -o root -g root debian/apparmor-profile ${ETCAPP}/usr.sbin.named
	install -m 644 -o root -g root debian/apparmor-profile.local ${ETCAPP}/local/usr.sbin.named
	rmdir debian/bind9/var/run/named debian/lwresd/var/run/named || true

	install debian/ip-up.d debian/bind9/etc/ppp/ip-up.d/bind9
	install debian/ip-down.d debian/bind9/etc/ppp/ip-down.d/bind9
	install debian/ip-up.d debian/bind9/etc/network/if-up.d/bind9
	install debian/ip-down.d debian/bind9/etc/network/if-down.d/bind9
	install -m644 debian/bind9.ufw.profile debian/bind9/etc/ufw/applications.d/bind9

	: # udeb install
	$(MAKE) -C build-udeb install DESTDIR=$(CURDIR)/debian/tmp-udeb
	mkdir -p debian/bind9/lib/$(DEB_HOST_MULTIARCH)
	for lib in dns irs isc isccfg; do \
	  cp -a debian/tmp-udeb/usr/lib/lib$${lib}*.so.* \
	    debian/bind9/lib/$(DEB_HOST_MULTIARCH)/.; \
	done
	rm -f debian/bind9/lib/$(DEB_HOST_MULTIARCH)/libisccc.*

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installdocs -i
	dh_installexamples -i
	dh_installmenu -i
	dh_installcron -i
	dh_installinfo -i
	dh_installchangelogs -i # CHANGES # upstream changelog only in bind9-doc
	dh_installchangelogs -pbind9-doc CHANGES
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	for i in $$(sed -n '/^Package:/s/^.* //p' debian/control); do cat debian/vars.in >> debian/$$i.substvars; done
	cat debian/vars.in >> debian/substvars
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
	dh_systemd_enable -pbind9 --no-enable bind9-resolvconf.service
	dh_systemd_enable -pbind9 bind9.service
	dh_systemd_enable -plwresd lwresd.service
	dh_installinit -a --no-start -- defaults 15 85
	# Ship the extra service file for resolvconf integration manually.
	if [ -d debian/bind9/lib/systemd/system ]; then cp debian/bind9-resolvconf.service debian/bind9/lib/systemd/system; fi
	dh_installcron -a
	dh_installdebconf -pbind9
	dh_installinfo -a
	dh_installchangelogs -a # CHANGES # upstream changelog only in bind9-doc
	dh_install --sourcedir=debian/bind9 -a
	(cd debian/bind9/ && rm -rf $$(cat ../*.install) )
	rm -rf debian/bind9/lib/$(DEB_HOST_MULTIARCH)
	rm -f debian/bind9/usr/share/man/man1/query-loc.1
	# install apport hook on Ubuntu
	if dpkg-vendor --is ubuntu; then \
	    install -m 644 -D debian/bind9.apport debian/bind9/usr/share/apport/package-hooks/bind9.py; \
	fi
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_makeshlibs -plibirs141 --add-udeb=libirs141-udeb
	dh_makeshlibs -plibisc160 --add-udeb=libisc160-udeb
	dh_makeshlibs -plibdns162 --add-udeb=libdns162-udeb
	dh_makeshlibs -plibisccfg140 --add-udeb=libisccfg140-udeb
	dh_installdeb -a
	dh_shlibdeps -a
	for i in $$(sed -n '/^Package:/s/^.* //p' debian/control); do cat debian/vars.in >> debian/$$i.substvars; done
	cat debian/vars.in >> debian/substvars
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
